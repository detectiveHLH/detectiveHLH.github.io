const e=JSON.parse('{"key":"v-234a9b90","path":"/posts/230825.html","title":"NameServer 核心原理解析","lang":"zh-CN","frontmatter":{"date":"2023-08-17T00:00:00.000Z","permalink":"/posts/230825.html","category":["消息队列"],"tag":["RocketMQ","NameServer"],"description":"NameServer 核心原理解析 在之前的文章中，已经把 Broker、Producer 和 Conusmer 的部分源码和核心的机制介绍的差不多了，但是其实 RocketMQ 中还有一个比较关键但是我们平时很容易忽略的组件——NameServer。 在日常的使用中，我们接触的最多的还是 Producer 和 Consumer，而 NameServer 没有直接跟我们有交互。就像 Kafka 集群背后用于其集群元数据管理的 Zookeeper 集群一样，NameServer 也在背后支撑着 RocketMQ 正常工作。","head":[["meta",{"property":"og:url","content":"https://leonsh.cn/posts/230825.html"}],["meta",{"property":"og:site_name","content":"SH的全栈笔记"}],["meta",{"property":"og:title","content":"NameServer 核心原理解析"}],["meta",{"property":"og:description","content":"NameServer 核心原理解析 在之前的文章中，已经把 Broker、Producer 和 Conusmer 的部分源码和核心的机制介绍的差不多了，但是其实 RocketMQ 中还有一个比较关键但是我们平时很容易忽略的组件——NameServer。 在日常的使用中，我们接触的最多的还是 Producer 和 Consumer，而 NameServer 没有直接跟我们有交互。就像 Kafka 集群背后用于其集群元数据管理的 Zookeeper 集群一样，NameServer 也在背后支撑着 RocketMQ 正常工作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-17T08:54:33.000Z"}],["meta",{"property":"article:author","content":"LeonSH"}],["meta",{"property":"article:tag","content":"RocketMQ"}],["meta",{"property":"article:tag","content":"NameServer"}],["meta",{"property":"article:published_time","content":"2023-08-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-17T08:54:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NameServer 核心原理解析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-17T08:54:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LeonSH\\",\\"url\\":\\"https://leonsh.cn\\"}]}"]]},"headers":[{"level":2,"title":"你给翻译翻译，什么叫 NameServer","slug":"你给翻译翻译-什么叫-nameserver","link":"#你给翻译翻译-什么叫-nameserver","children":[]},{"level":2,"title":"注册 Broker 都做了什么","slug":"注册-broker-都做了什么","link":"#注册-broker-都做了什么","children":[{"level":3,"title":"校验 Body 的完整性","slug":"校验-body-的完整性","link":"#校验-body-的完整性","children":[]},{"level":3,"title":"解析Body","slug":"解析body","link":"#解析body","children":[]},{"level":3,"title":"执行注册逻辑","slug":"执行注册逻辑","link":"#执行注册逻辑","children":[]}]},{"level":2,"title":"NameServer 启动流程","slug":"nameserver-启动流程","link":"#nameserver-启动流程","children":[]},{"level":2,"title":"NameServer 可处理的操作","slug":"nameserver-可处理的操作","link":"#nameserver-可处理的操作","children":[]}],"git":{"createdTime":1692262473000,"updatedTime":1692262473000,"contributors":[{"name":"leonsh","email":"detectivehlh@qq.com","commits":1}]},"readingTime":{"minutes":7.25,"words":2176},"filePathRelative":"posts/消息队列/NameServer 核心原理解析.md","localizedDate":"2023年8月17日","excerpt":"<h1> NameServer 核心原理解析</h1>\\n<p>在<a href=\\"https://mp.weixin.qq.com/s/6pBlK_h0PEHfFXjXFgqMDQ\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">之前的文章</a>中，已经把 Broker、Producer 和 Conusmer 的部分源码和核心的机制介绍的差不多了，但是其实 RocketMQ 中还有一个比较关键但是我们平时很容易忽略的组件——<strong>NameServer</strong>。</p>\\n<p>在日常的使用中，我们接触的最多的还是 Producer 和 Consumer，而 NameServer 没有直接跟我们有交互。就像 Kafka 集群背后用于其集群元数据管理的 Zookeeper 集群一样，NameServer 也在背后支撑着 RocketMQ 正常工作。</p>","copyright":{"author":"LeonSH"},"autoDesc":true}');export{e as data};
