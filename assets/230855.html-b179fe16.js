const e=JSON.parse('{"key":"v-e5e5380a","path":"/posts/230855.html","title":"Zookeeper基础原理&应用场景详解","lang":"zh-CN","frontmatter":{"date":"2021-04-21T00:00:00.000Z","permalink":"/posts/230855.html","category":["后端"],"tag":["Zookeeper"],"description":"Zookeeper基础原理&amp;应用场景详解 简单了解Zookeeper Tips: 如果之前对Zookeeper不了解的话，这里大概留个印象就好了 Zookeeper是一个分布式协调服务，可以用于元数据管理、分布式锁、分布式协调、发布订阅、服务命名等等。 例如，Kafka中就是用Zookeeper来保存其集群中的相关元数据，例如Broker、Topic以及Partition等等。同时，基于Zookeeper的Watch监听机制，还可以用其实现发布、订阅的功能。","head":[["meta",{"property":"og:url","content":"https://leonsh.cn/posts/230855.html"}],["meta",{"property":"og:site_name","content":"SH的全栈笔记"}],["meta",{"property":"og:title","content":"Zookeeper基础原理&应用场景详解"}],["meta",{"property":"og:description","content":"Zookeeper基础原理&amp;应用场景详解 简单了解Zookeeper Tips: 如果之前对Zookeeper不了解的话，这里大概留个印象就好了 Zookeeper是一个分布式协调服务，可以用于元数据管理、分布式锁、分布式协调、发布订阅、服务命名等等。 例如，Kafka中就是用Zookeeper来保存其集群中的相关元数据，例如Broker、Topic以及Partition等等。同时，基于Zookeeper的Watch监听机制，还可以用其实现发布、订阅的功能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-02T08:48:07.000Z"}],["meta",{"property":"article:author","content":"LeonSH"}],["meta",{"property":"article:tag","content":"Zookeeper"}],["meta",{"property":"article:published_time","content":"2021-04-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-02T08:48:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zookeeper基础原理&应用场景详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-02T08:48:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LeonSH\\",\\"url\\":\\"https://leonsh.cn\\"}]}"]]},"headers":[{"level":2,"title":"简单了解Zookeeper","slug":"简单了解zookeeper","link":"#简单了解zookeeper","children":[]},{"level":2,"title":"Zookeeper内部运行机制","slug":"zookeeper内部运行机制","link":"#zookeeper内部运行机制","children":[]},{"level":2,"title":"Zookeeper的节点创建方式","slug":"zookeeper的节点创建方式","link":"#zookeeper的节点创建方式","children":[{"level":3,"title":"创建持久节点","slug":"创建持久节点","link":"#创建持久节点","children":[]},{"level":3,"title":"创建持久顺序节点","slug":"创建持久顺序节点","link":"#创建持久顺序节点","children":[]},{"level":3,"title":"创建临时节点","slug":"创建临时节点","link":"#创建临时节点","children":[]},{"level":3,"title":"创建临时顺序节点","slug":"创建临时顺序节点","link":"#创建临时顺序节点","children":[]}]},{"level":2,"title":"Zookeeper的用途","slug":"zookeeper的用途","link":"#zookeeper的用途","children":[{"level":3,"title":"元数据管理","slug":"元数据管理","link":"#元数据管理","children":[]},{"level":3,"title":"分布式锁","slug":"分布式锁","link":"#分布式锁","children":[]},{"level":3,"title":"分布式协调","slug":"分布式协调","link":"#分布式协调","children":[]},{"level":3,"title":"发布订阅","slug":"发布订阅","link":"#发布订阅","children":[]},{"level":3,"title":"命名服务","slug":"命名服务","link":"#命名服务","children":[]}]}],"git":{"createdTime":1693644487000,"updatedTime":1693644487000,"contributors":[{"name":"leonsh","email":"detectivehlh@qq.com","commits":1}]},"readingTime":{"minutes":6.59,"words":1978},"filePathRelative":"posts/后端/Zookeeper基础原理&应用场景详解.md","localizedDate":"2021年4月21日","excerpt":"<h1> Zookeeper基础原理&amp;应用场景详解</h1>\\n<h2> 简单了解Zookeeper</h2>\\n<blockquote>\\n<p>Tips: 如果之前对Zookeeper不了解的话，这里大概留个印象就好了</p>\\n</blockquote>\\n<p>Zookeeper是一个分布式协调服务，可以用于元数据管理、分布式锁、分布式协调、发布订阅、服务命名等等。</p>\\n<p>例如，<strong>Kafka</strong>中就是用Zookeeper来保存其集群中的相关元数据，例如Broker、Topic以及Partition等等。同时，基于Zookeeper的Watch监听机制，还可以用其实现发布、订阅的功能。</p>","copyright":{"author":"LeonSH"},"autoDesc":true}');export{e as data};
