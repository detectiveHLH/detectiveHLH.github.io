const e=JSON.parse('{"key":"v-df11d58e","path":"/posts/230857.html","title":"Base 64原理","lang":"zh-CN","frontmatter":{"date":"2021-08-24T00:00:00.000Z","permalink":"/posts/230857.html","category":["后端"],"tag":["Base64"],"description":"Base 64原理 Base64 Base64 是什么？是将字节流转换成可打印字符、将可打印字符转换为字节流的一种算法。Base64 使用 64 个可打印字符来表示转换后的数据。 准确的来说，Base64 不算是一种加、解密的算法，它是一种编码、解码的算法。这也是为什么我的用词是编码、解码，而不是加密、解密。 编码原理 这里的讨论的前提是使用 UTF-8 编码 Base64 算法的原理，是将输入流中的字节按每 3 个分为一组，然后每次取 6 个比特，将其转换成表格中对应的数据，一直重复到没有剩余的字符为止，转换表格如下：","head":[["meta",{"property":"og:url","content":"https://leonsh.cn/posts/230857.html"}],["meta",{"property":"og:site_name","content":"SH的全栈笔记"}],["meta",{"property":"og:title","content":"Base 64原理"}],["meta",{"property":"og:description","content":"Base 64原理 Base64 Base64 是什么？是将字节流转换成可打印字符、将可打印字符转换为字节流的一种算法。Base64 使用 64 个可打印字符来表示转换后的数据。 准确的来说，Base64 不算是一种加、解密的算法，它是一种编码、解码的算法。这也是为什么我的用词是编码、解码，而不是加密、解密。 编码原理 这里的讨论的前提是使用 UTF-8 编码 Base64 算法的原理，是将输入流中的字节按每 3 个分为一组，然后每次取 6 个比特，将其转换成表格中对应的数据，一直重复到没有剩余的字符为止，转换表格如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LeonSH"}],["meta",{"property":"article:tag","content":"Base64"}],["meta",{"property":"article:published_time","content":"2021-08-24T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Base 64原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-24T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LeonSH\\",\\"url\\":\\"https://leonsh.cn\\"}]}"]]},"headers":[{"level":2,"title":"Base64","slug":"base64","link":"#base64","children":[]},{"level":2,"title":"编码原理","slug":"编码原理","link":"#编码原理","children":[{"level":3,"title":"编码过程","slug":"编码过程","link":"#编码过程","children":[]},{"level":3,"title":"编码图解","slug":"编码图解","link":"#编码图解","children":[]}]},{"level":2,"title":"解码原理","slug":"解码原理","link":"#解码原理","children":[{"level":3,"title":"解码过程","slug":"解码过程","link":"#解码过程","children":[]},{"level":3,"title":"解码图解","slug":"解码图解","link":"#解码图解","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.6,"words":1680},"filePathRelative":"posts/后端/Base 64原理.md","localizedDate":"2021年8月24日","excerpt":"<h1> Base 64原理</h1>\\n<h2> Base64</h2>\\n<p>Base64 是什么？是将字节流转换成可打印字符、将可打印字符转换为字节流的一种<strong>算法</strong>。Base64 使用 64 个可打印字符来表示转换后的数据。</p>\\n<p>准确的来说，Base64 不算是一种加、解密的算法，它是一种编码、解码的算法。这也是为什么我的用词是编码、解码，而不是加密、解密。</p>\\n<h2> 编码原理</h2>\\n<blockquote>\\n<p><strong>这里的讨论的前提是使用 UTF-8 编码</strong></p>\\n</blockquote>\\n<p>Base64 算法的原理，是将输入流中的字节按每 3 个分为一组，然后每次取 6 个比特，将其转换成表格中对应的数据，一直重复到没有剩余的字符为止，转换表格如下：</p>","copyright":{"author":"LeonSH"},"autoDesc":true}');export{e as data};
