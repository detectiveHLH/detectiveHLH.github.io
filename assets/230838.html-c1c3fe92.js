const e=JSON.parse('{"key":"v-285f7756","path":"/posts/230838.html","title":"在Java中使用redisTemplate操作缓存","lang":"zh-CN","frontmatter":{"date":"2019-01-18T00:00:00.000Z","permalink":"/posts/230838.html","category":["Java"],"tag":["Redis"],"description":"在Java中使用redisTemplate操作缓存 背景 在最近的项目中，有一个需求是对一个很大的数据库进行查询，数据量大概在几千万条。但同时对查询速度的要求也比较高。 这个数据库之前在没有使用Presto的情况下，使用的是Hive，使用Hive进行一个简单的查询，速度可能在几分钟。当然几分钟也并不完全是跑SQL的时间，这里面包含发请求，查询数据并且返回数据的时间的总和。但是即使这样，这样的速度明显不能满足交互式的查询需求。","head":[["meta",{"property":"og:url","content":"https://leonsh.cn/posts/230838.html"}],["meta",{"property":"og:site_name","content":"SH的全栈笔记"}],["meta",{"property":"og:title","content":"在Java中使用redisTemplate操作缓存"}],["meta",{"property":"og:description","content":"在Java中使用redisTemplate操作缓存 背景 在最近的项目中，有一个需求是对一个很大的数据库进行查询，数据量大概在几千万条。但同时对查询速度的要求也比较高。 这个数据库之前在没有使用Presto的情况下，使用的是Hive，使用Hive进行一个简单的查询，速度可能在几分钟。当然几分钟也并不完全是跑SQL的时间，这里面包含发请求，查询数据并且返回数据的时间的总和。但是即使这样，这样的速度明显不能满足交互式的查询需求。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"LeonSH"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2019-01-18T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在Java中使用redisTemplate操作缓存\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-01-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LeonSH\\",\\"url\\":\\"https://leonsh.cn\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"为什么要使用缓存","slug":"为什么要使用缓存","link":"#为什么要使用缓存","children":[]},{"level":2,"title":"使用redisTemplate","slug":"使用redistemplate","link":"#使用redistemplate","children":[{"level":3,"title":"List","slug":"list","link":"#list","children":[]},{"level":3,"title":"Hash","slug":"hash","link":"#hash","children":[]}]},{"level":2,"title":"引入redisTemplate","slug":"引入redistemplate","link":"#引入redistemplate","children":[{"level":3,"title":"引入pom依赖","slug":"引入pom依赖","link":"#引入pom依赖","children":[]},{"level":3,"title":"新建配置文件","slug":"新建配置文件","link":"#新建配置文件","children":[]},{"level":3,"title":"注入","slug":"注入","link":"#注入","children":[]}]},{"level":2,"title":"写在后面","slug":"写在后面","link":"#写在后面","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":11.58,"words":3474},"filePathRelative":"posts/Java/在Java中使用redisTemplate操作缓存.md","localizedDate":"2019年1月18日","excerpt":"<h1> 在Java中使用redisTemplate操作缓存</h1>\\n<h2> 背景</h2>\\n<p>在最近的项目中，有一个需求是对一个很大的数据库进行查询，数据量大概在几千万条。但同时对查询速度的要求也比较高。</p>\\n<p>这个数据库之前在没有使用<a href=\\"https://prestodb.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Presto</a>的情况下，使用的是Hive，使用Hive进行一个简单的查询，速度可能在几分钟。当然几分钟也并不完全是跑SQL的时间，这里面包含发请求，查询数据并且返回数据的时间的总和。但是即使这样，这样的速度明显不能满足交互式的查询需求。</p>","copyright":{"author":"LeonSH"},"autoDesc":true}');export{e as data};
